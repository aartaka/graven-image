SBCL:
* (inspect (find-package :cl))
The object is a STRUCTURE-OBJECT of type PACKAGE.
0. %NAME: "COMMON-LISP"
1. ID: 1
2. KEYS: #("COMMON-LISP" 2082728036706277919 "CL" 107557114811513854)
3. TABLES: #()
4. MRU-TABLE-INDEX: 0
5. %USED-BY: NIL
6. INTERNAL-SYMBOLS: #<SB-IMPL::SYMBOL-HASHSET (0+0)/3 [load=0.0%] {10001C88D3}>
7. EXTERNAL-SYMBOLS: #<SB-IMPL::SYMBOL-HASHSET (978+0)/1087 [1.250 words/sym,load=90.0%] {10001C8913}>
8. %SHADOWING-SYMBOLS: NIL
9. DOC-STRING: "public: home of symbols defined by the ANSI language specification"
10. %BITS: 1
11. %IMPLEMENTATION-PACKAGES: NIL
12. %LOCAL-NICKNAMES: NIL
13. SOURCE-LOCATION: NIL
* (inspect *readtable*)
The object is a STRUCTURE-OBJECT of type READTABLE.
0. BASE-CHAR-SYNTAX-ARRAY: #(4 4 4 4 4 4 4 4 4 0 0 4 0 0 4 4 4 4 4 4 4 4 4 4 4
                             4 4 4 4 4 4 4 0 4 1 4 4 4 4 1 1 1 4 4 1 4 4 4 4 4
                             4 4 4 4 4 4 4 4 4 1 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
                             4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 2 4 4 4 1 4 4 4
                             4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 3
                             4 4 4)
1. BASE-CHAR-MACRO-ARRAY: #(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
                            NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
                            NIL NIL NIL NIL NIL NIL NIL NIL
                            #<FUNCTION SB-IMPL::READ-STRING>
                            #<FUNCTION (LAMBDA (STREAM CHAR)
                                         :IN
                                         SB-IMPL::%MAKE-DISPATCH-MACRO-CHAR) {100031F1FB}>
                            NIL NIL NIL #<FUNCTION SB-IMPL::READ-QUOTE>
                            SB-IMPL::READ-LIST SB-IMPL::READ-RIGHT-PAREN NIL
                            NIL SB-IMPL::COMMA-CHARMACRO NIL NIL NIL NIL NIL
                            NIL NIL NIL NIL NIL NIL NIL NIL NIL
                            #<FUNCTION SB-IMPL::READ-COMMENT> NIL NIL NIL NIL
                            NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
                            NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
                            NIL NIL NIL NIL NIL NIL
                            SB-IMPL::BACKQUOTE-CHARMACRO NIL NIL NIL NIL NIL
                            NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
                            NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
2. EXTENDED-CHAR-TABLE: #<HASH-TABLE :TEST EQ :COUNT 0 {1000011833}>
3. %READTABLE-CASE: :UPCASE
4. %READTABLE-STRING-PREFERENCE: CHARACTER
5. %READTABLE-SYMBOL-PREFERENCE: BASE-CHAR
6. %READTABLE-NORMALIZATION: T
* (inspect (make-instance 'foo))
The object is a STANDARD-OBJECT of type FOO.
0. SLOT-A: 5
* (inspect (make-instance 'error))
The object is a CONDITION of type ERROR.
* (inspect (open #p"~/git/nyxt/source/buffer.lisp"))
The object is a STRUCTURE-OBJECT of type SB-SYS:FD-STREAM.
0. IN-BUFFER: NIL
1. CIN-BUFFER: "..."
2. IN-INDEX: 512
3. IN: #<FUNCTION SB-IMPL::INPUT-CHAR/UTF-8>
4. BIN: #<FUNCTION SB-KERNEL:ILL-BIN>
5. N-BIN: #<FUNCTION SB-IMPL::FD-STREAM-READ-N-CHARACTERS/UTF-8>
6. COUT: #<FUNCTION SB-KERNEL:ILL-OUT>
7. BOUT: #<FUNCTION SB-KERNEL:ILL-BOUT>
8. SOUT: #<FUNCTION SB-KERNEL:ILL-OUT>
9. MISC: #<FUNCTION SB-IMPL::FD-STREAM-MISC-ROUTINE>
10. INPUT-CHAR-POS: NIL
11. NAME: "file /home/aartaka/git/nyxt/source/buffer.lisp"
12. FILE: "/home/aartaka/git/nyxt/source/buffer.lisp"
13. ORIGINAL: NIL
14. DELETE-ORIGINAL: NIL
15. ELEMENT-SIZE: 1
16. ELEMENT-TYPE: CHARACTER
17. ELEMENT-MODE: CHARACTER
18. FD: 4
19. FD-TYPE: :REGULAR
20. BUFFERING: :FULL
21. DUAL-CHANNEL-P: NIL
22. OUTPUT-COLUMN: NIL
23. LISTEN: NIL
24. SERVE-EVENTS: NIL
25. INSTEAD: ""
26. IBUF: #S(SB-IMPL::BUFFER
             :SAP #.(SB-SYS:INT-SAP #X7F0688C87000)
             :LENGTH 8192
             :HEAD 0
             :TAIL 0)
27. EOF-FORCED-P: NIL
28. OBUF: NIL
29. OUTPUT-QUEUE: NIL
30. HANDLER: NIL
31. TIMEOUT: NIL
32. PATHNAME: #P"~/git/nyxt/source/buffer.lisp"
33. EXTERNAL-FORMAT: :UTF-8
34. CHAR-SIZE: #<FUNCTION SB-IMPL::BYTES-FOR-CHAR/UTF-8>
35. OUTPUT-BYTES: #<FUNCTION SB-KERNEL:ILL-OUT>
* (inspect #(1 "hello" #p"path" #c(1 3)))
The object is a (VECTOR T) of length 4.
0. 1
1. "hello"
2. #P"path"
3. #C(1 3)
* (inspect #p"~/git/nyxt/source/buffer.lisp")
The object is a PATHNAME.
0. NAMESTRING: NIL
1. HOST: #<SB-IMPL::UNIX-HOST {100003F0C3}>
2. DEVICE: NIL
3. DIR+HASH: ((:ABSOLUTE :HOME "git" "nyxt" "source") . 2097712202500633558)
4. NAME: "buffer"
5. TYPE: "lisp"
6. VERSION: :NEWEST
* (inspect (make-random-state))
The object is a STRUCTURE-OBJECT of type RANDOM-STATE.
0. STATE: #(0 2567483615 624 5489 1301868182 2938499221 2950281878 1875628136
            751856242 944701696 2243192071 694061057 219885934 2066767472
            3182869408 485472502 2336857883 1071588843 3418470598 951210697
            3693558366 2923482051 1793174584 2982310801 1586906132 1951078751
            1808158765 1733897588 431328322 4202539044 530658942 1714810322
            3025256284 3342585396 1937033938 2640572511 1654299090 3692403553
            4233871309 3497650794 862629010 2943236032 2426458545 1603307207
            1133453895 3099196360 2208657629 2747653927 931059398 761573964
            3157853227 785880413 730313442 124945756 2937117055 3295982469
            1724353043 3021675344 3884886417 4010150098 4056961966 699635835
            2681338818 1339167484 720757518 2800161476 2376097373 1532957371
            3902664099 1238982754 3725394514 3449176889 3570962471 4287636090
            4087307012 3603343627 202242161 2995682783 1620962684 3704723357
            371613603 2814834333 2111005706 624778151 2094172212 4284947003
            1211977835 991917094 1570449747 2962370480 1259410321 170182696
            146300961 2836829791 619452428 2723670296 1881399711 1161269684
            1675188680 4132175277 780088327 3409462821 1036518241 1834958505
            3048448173 161811569 618488316 44795092 3918322701 1924681712
            3239478144 383254043 4042306580 2146983041 3992780527 3518029708
            3545545436 3901231469 1896136409 2028528556 2339662006 501326714
            2060962201 2502746480 561575027 581893337 3393774360 1778912547
            3626131687 2175155826 319853231 986875531 819755096 2915734330
            2688355739 3482074849 2736559 2296975761 1029741190 2876812646
            690154749 579200347 4027461746 1285330465 2701024045 4117700889
            759495121 3332270341 2313004527 2277067795 4131855432 2722057515
            1264804546 3848622725 2211267957 4100593547 959123777 2130745407
            3194437393 486673947 1377371204 17472727 352317554 3955548058
            159652094 1232063192 3835177280 49423123 3083993636 733092
            2120519771 2573409834 1112952433 3239502554 761045320 1087580692
            2540165110 641058802 1792435497 2261799288 1579184083 627146892
            2165744623 2200142389 2167590760 2381418376 1793358889 3081659520
            1663384067 2009658756 2689600308 739136266 2304581039 3529067263
            591360555 525209271 3131882996 294230224 2076220115 3113580446
            1245621585 1386885462 3203270426 123512128 12350217 354956375
            4282398238 3356876605 3888857667 157639694 2616064085 1563068963
            2762125883 4045394511 4180452559 3294769488 1684529556 1002945951
            3181438866 22506664 691783457 2685221343 171579916 3878728600
            2475806724 2030324028 3331164912 1708711359 1970023127 2859691344
            2588476477 2748146879 136111222 2967685492 909517429 2835297809
            3206906216 3186870716 341264097 2542035121 3353277068 548223577
            3170936588 1678403446 297435620 2337555430 466603495 1132321815
            1208589219 696392160 894244439 2562678859 470224582 3306867480
            201364898 2075966438 1767227936 2929737987 3674877796 2654196643
            3692734598 3528895099 2796780123 3048728353 842329300 191554730
            2922459673 3489020079 3979110629 1022523848 2202932467 3583655201
            3565113719 587085778 4176046313 3013713762 950944241 396426791
            3784844662 3477431613 3594592395 2782043838 3392093507 3106564952
            2829419931 1358665591 2206918825 3170783123 31522386 2988194168
            1782249537 1105080928 843500134 1225290080 1521001832 3605886097
            2802786495 2728923319 3996284304 903417639 1171249804 1020374987
            2824535874 423621996 1988534473 2493544470 1008604435 1756003503
            1488867287 1386808992 732088248 1780630732 2482101014 976561178
            1543448953 2602866064 2021139923 1952599828 2360242564 2117959962
            2753061860 2388623612 4138193781 2962920654 2284970429 766920861
            3457264692 2879611383 815055854 2332929068 1254853997 3740375268
            3799380844 4091048725 2006331129 1982546212 686850534 1907447564
            2682801776 2780821066 998290361 1342433871 4195430425 607905174
            3902331779 2454067926 1708133115 1170874362 2008609376 3260320415
            2211196135 433538229 2728786374 2189520818 262554063 1182318347
            3710237267 1221022450 715966018 2417068910 2591870721 2870691989
            3418190842 4238214053 1540704231 1575580968 2095917976 4078310857
            2313532447 2110690783 4056346629 4061784526 1123218514 551538993
            597148360 4120175196 3581618160 3181170517 422862282 3227524138
            1713114790 662317149 1230418732 928171837 1324564878 1928816105
            1786535431 2878099422 3290185549 539474248 1657512683 552370646
            1671741683 3655312128 1552739510 2605208763 1441755014 181878989
            3124053868 1447103986 3183906156 1728556020 3502241336 3055466967
            1013272474 818402132 1715099063 2900113506 397254517 4194863039
            1009068739 232864647 2540223708 2608288560 2415367765 478404847
            3455100648 3182600021 2115988978 434269567 4117179324 3461774077
            887256537 3545801025 286388911 3451742129 1981164769 786667016
            3310123729 3097811076 2224235657 2959658883 3370969234 2514770915
            3345656436 2677010851 2206236470 271648054 2342188545 4292848611
            3646533909 3754009956 3803931226 4160647125 1477814055 4043852216
            1876372354 3133294443 3871104810 3177020907 2074304428 3479393793
            759562891 164128153 1839069216 2114162633 3989947309 3611054956
            1333547922 835429831 494987340 171987910 1252001001 370809172
            3508925425 2535703112 1276855041 1922855120 835673414 3030664304
            613287117 171219893 3423096126 3376881639 2287770315 1658692645
            1262815245 3957234326 1168096164 2968737525 2655813712 2132313144
            3976047964 326516571 353088456 3679188938 3205649712 2654036126
            1249024881 880166166 691800469 2229503665 1673458056 4032208375
            1851778863 2563757330 376742205 1794655231 340247333 1505873033
            396524441 879666767 3335579166 3260764261 3335999539 506221798
            4214658741 975887814 2080536343 3360539560 571586418 138896374
            4234352651 2737620262 3928362291 1516365296 38056726 3599462320
            3585007266 3850961033 471667319 1536883193 2310166751 1861637689
            2530999841 4139843801 2710569485 827578615 2012334720 2907369459
            3029312804 2820112398 1965028045 35518606 2478379033 643747771
            1924139484 4123405127 3811735531 3429660832 3285177704 1948416081
            1311525291 1183517742 1739192232 3979815115 2567840007 4116821529
            213304419 4125718577 1473064925 2442436592 1893310111 4195361916
            3747569474 828465101 2991227658 750582866 1205170309 1409813056
            678418130 1171531016 3821236156 354504587 4202874632 3882511497
            1893248677 1903078632 26340130 2069166240 3657122492 3725758099
            831344905 811453383 3447711422 2434543565 4166886888 3358210805
            4142984013 2988152326 3527824853 982082992 2809155763 190157081
            3340214818 2365432395 2548636180 2894533366 3474657421 2372634704
            2845748389 43024175 2774226648 1987702864 3186502468 453610222
            4204736567 1392892630 2471323686 2470534280 3541393095 4269885866
            3909911300 759132955 1482612480 667715263 1795580598 2337923983
            3390586366 581426223 1515718634 476374295 705213300 363062054
            2084697697 2407503428 2292957699 2426213835 2199989172 1987356470
            4026755612 2147252133 270400031 1367820199 2369854699 2844269403
            79981964)
* (inspect (let ((ht (make-hash-table :test #'equal)))
  (setf (gethash #c(1 3) ht) 1)
  (setf (gethash 1 ht) "hello")
  (setf (gethash "hello" ht) #p"path")
  (setf (gethash #p"path" ht) #c(1 3))
  ht))
The object is a STRUCTURE-OBJECT of type HASH-TABLE.
0. GETHASH-IMPL: #<FUNCTION SB-IMPL::GETHASH/EQUAL>
1. PUTHASH-IMPL: #<FUNCTION SB-IMPL::PUTHASH/EQUAL>
2. REMHASH-IMPL: #<FUNCTION SB-IMPL::REMHASH/EQUAL>
3. CLRHASH-IMPL: #<FUNCTION SB-IMPL::CLRHASH-IMPL>
4. PAIRS: #(4 0 #C(1 3) 1 1 "hello" "hello" #P"path" #P"path" #C(1 3)
            #<unbound> #<unbound> #<unbound> #<unbound> #<unbound> #<unbound>
            #(0 1775874732 60102310 1165911712 1782250739 0 0 0))
5. CACHE: 4611686018427387899
6. INDEX-VECTOR: #(3 0 0 4 1 0 2 0)
7. NEXT-VECTOR: #(0 0 0 0 0 0 0 0)
8. HASH-VECTOR: #(0 1775874732 60102310 1165911712 1782250739 0 0 0)
9. FLAGS: 32
10. %LOCK: NIL
11. TEST-FUN: #<FUNCTION EQUAL>
12. HASH-FUN: #<FUNCTION SB-IMPL::EQUAL-HASH>
13. TEST: EQUAL
14. REHASH-SIZE: 1.5
15. REHASH-THRESHOLD: 1.0
16. %COUNT: 4
17. NEXT-FREE-KV: 5
* (inspect #*1010001)
The object is a (VECTOR BIT) of length 7.
0. 1
1. 0
2. 1
3. 0
4. 0
5. 0
6. 1
* (inspect (find-class 'standard-class))
The object is a STANDARD-OBJECT of type STANDARD-CLASS.
0. %TYPE: (CLASS #<STANDARD-CLASS COMMON-LISP:STANDARD-CLASS>)
1. SOURCE: #S(SB-C:DEFINITION-SOURCE-LOCATION
              :NAMESTRING "SYS:SRC;PCL;DEFS.LISP"
              :INDICES 2621441)
2. PLIST: (SB-PCL::MI-INITARGS
           (((:NAME :DIRECT-SUPERCLASSES :DIRECT-SLOTS SB-PCL::SOURCE
              SB-PCL::SAFE-P :DIRECT-DEFAULT-INITARGS :DOCUMENTATION))
            ((:NAME :DIRECT-SUPERCLASSES :DIRECT-SLOTS SB-PCL::SOURCE
              SB-PCL::SAFE-P :DIRECT-DEFAULT-INITARGS))
            ((:NAME :DIRECT-SUPERCLASSES :DIRECT-SLOTS SB-PCL::SOURCE
              SB-PCL::SAFE-P :DOCUMENTATION :DIRECT-DEFAULT-INITARGS)))
           SB-PCL::DIRECT-DEFAULT-INITARGS
           ((:DIRECT-SUPERCLASSES (LIST SB-PCL::*THE-CLASS-STANDARD-OBJECT*)
             #<FUNCTION (LAMBDA () :IN "SYS:SRC;PCL;DEFS.LISP") {533B517B}>))
           SB-PCL::DEFAULT-INITARGS
           ((:DIRECT-SUPERCLASSES (LIST SB-PCL::*THE-CLASS-STANDARD-OBJECT*)
             #<FUNCTION (LAMBDA () :IN "SYS:SRC;PCL;DEFS.LISP") {533B517B}>)))
3. NAME: STANDARD-CLASS
4. CLASS-EQ-SPECIALIZER: #<SB-PCL::CLASS-EQ-SPECIALIZER #<STANDARD-CLASS COMMON-LISP:STANDARD-CLASS>>
5. DIRECT-SUPERCLASSES: (#<STANDARD-CLASS SB-PCL::STD-CLASS>)
6. DIRECT-SUBCLASSES: NIL
7. DIRECT-METHODS: ((#<STANDARD-METHOD SB-MOP:COMPUTE-SLOTS (STANDARD-CLASS) {10005C8123}>
                     #<STANDARD-METHOD SB-MOP:COMPUTE-SLOTS :AROUND (STANDARD-CLASS) {10005C8133}>
                     #<STANDARD-METHOD COMMON-LISP:ALLOCATE-INSTANCE (STANDARD-CLASS) {10004D66A3}>
                     #<STANDARD-METHOD COMMON-LISP:CHANGE-CLASS (STANDARD-OBJECT
                                                                 STANDARD-CLASS) {10005C8143}>
                     #<STANDARD-METHOD COMMON-LISP:CHANGE-CLASS (SB-MOP:FORWARD-REFERENCED-CLASS
                                                                 STANDARD-CLASS) {10005C8153}>
                     #<STANDARD-METHOD COMMON-LISP:CHANGE-CLASS (SB-MOP:FUNCALLABLE-STANDARD-OBJECT
                                                                 STANDARD-CLASS) {10005C8163}>))
8. %DOCUMENTATION: NIL
9. SAFE-P: NIL
10. FINALIZED-P: T
11. %CLASS-PRECEDENCE-LIST: (#<STANDARD-CLASS COMMON-LISP:STANDARD-CLASS>
                             #<STANDARD-CLASS SB-PCL::STD-CLASS>
                             #<STANDARD-CLASS SB-PCL::SLOT-CLASS>
                             #<STANDARD-CLASS SB-PCL::PCL-CLASS>
                             #<STANDARD-CLASS COMMON-LISP:CLASS>
                             #<STANDARD-CLASS SB-PCL::DEPENDENT-UPDATE-MIXIN>
                             #<STANDARD-CLASS SB-PCL::PLIST-MIXIN>
                             #<STANDARD-CLASS SB-PCL::DEFINITION-SOURCE-MIXIN>
                             #<STANDARD-CLASS SB-PCL::STANDARD-SPECIALIZER>
                             #<STANDARD-CLASS SB-MOP:SPECIALIZER>
                             #<STANDARD-CLASS SB-MOP:METAOBJECT>
                             #<STANDARD-CLASS COMMON-LISP:STANDARD-OBJECT>
                             #<SB-PCL::SLOT-CLASS SB-PCL::SLOT-OBJECT>
                             #<SB-PCL:SYSTEM-CLASS COMMON-LISP:T>)
12. CPL-AVAILABLE-P: T
13. CAN-PRECEDE-LIST: (#<STANDARD-CLASS SB-PCL::STD-CLASS>
                       #<STANDARD-CLASS SB-PCL::SLOT-CLASS>
                       #<STANDARD-CLASS SB-PCL::PCL-CLASS>
                       #<STANDARD-CLASS COMMON-LISP:CLASS>
                       #<STANDARD-CLASS SB-PCL::DEPENDENT-UPDATE-MIXIN>
                       #<STANDARD-CLASS SB-PCL::PLIST-MIXIN>
                       #<STANDARD-CLASS SB-PCL::DEFINITION-SOURCE-MIXIN>
                       #<STANDARD-CLASS SB-PCL::STANDARD-SPECIALIZER>
                       #<STANDARD-CLASS SB-MOP:SPECIALIZER>
                       #<STANDARD-CLASS SB-MOP:METAOBJECT>
                       #<STANDARD-CLASS COMMON-LISP:STANDARD-OBJECT>
                       #<SB-PCL::SLOT-CLASS SB-PCL::SLOT-OBJECT>
                       #<SB-PCL:SYSTEM-CLASS COMMON-LISP:T>)
14. INCOMPATIBLE-SUPERCLASS-LIST: (#<STANDARD-CLASS SB-MOP:FUNCALLABLE-STANDARD-CLASS>)
15. WRAPPER: #<SB-KERNEL:WRAPPER (ID=351) for STANDARD-CLASS {50111B63}>
16. PROTOTYPE: #<STANDARD-CLASS {1000330B33}>
17. DIRECT-SLOTS: NIL
18. SLOTS: (#<SB-MOP:STANDARD-EFFECTIVE-SLOT-DEFINITION SB-PCL::%TYPE>
            #<SB-MOP:STANDARD-EFFECTIVE-SLOT-DEFINITION SB-PCL::SOURCE>
            #<SB-MOP:STANDARD-EFFECTIVE-SLOT-DEFINITION SB-PCL::PLIST>
            #<SB-MOP:STANDARD-EFFECTIVE-SLOT-DEFINITION SB-PCL::NAME>
            #<SB-MOP:STANDARD-EFFECTIVE-SLOT-DEFINITION SB-PCL::CLASS-EQ-SPECIALIZER>
            #<SB-MOP:STANDARD-EFFECTIVE-SLOT-DEFINITION SB-PCL::DIRECT-SUPERCLASSES>
            #<SB-MOP:STANDARD-EFFECTIVE-SLOT-DEFINITION SB-PCL::DIRECT-SUBCLASSES>
            #<SB-MOP:STANDARD-EFFECTIVE-SLOT-DEFINITION SB-PCL::DIRECT-METHODS>
            #<SB-MOP:STANDARD-EFFECTIVE-SLOT-DEFINITION SB-PCL::%DOCUMENTATION>
            #<SB-MOP:STANDARD-EFFECTIVE-SLOT-DEFINITION SB-PCL::SAFE-P>
            #<SB-MOP:STANDARD-EFFECTIVE-SLOT-DEFINITION SB-PCL::FINALIZED-P>
            #<SB-MOP:STANDARD-EFFECTIVE-SLOT-DEFINITION SB-PCL::%CLASS-PRECEDENCE-LIST>
            #<SB-MOP:STANDARD-EFFECTIVE-SLOT-DEFINITION SB-PCL::CPL-AVAILABLE-P>
            #<SB-MOP:STANDARD-EFFECTIVE-SLOT-DEFINITION SB-PCL::CAN-PRECEDE-LIST>
            #<SB-MOP:STANDARD-EFFECTIVE-SLOT-DEFINITION SB-PCL::INCOMPATIBLE-SUPERCLASS-LIST>
            #<SB-MOP:STANDARD-EFFECTIVE-SLOT-DEFINITION SB-KERNEL:WRAPPER>
            #<SB-MOP:STANDARD-EFFECTIVE-SLOT-DEFINITION SB-PCL::PROTOTYPE>
            #<SB-MOP:STANDARD-EFFECTIVE-SLOT-DEFINITION SB-PCL::DIRECT-SLOTS>
            #<SB-MOP:STANDARD-EFFECTIVE-SLOT-DEFINITION SB-PCL::SLOTS>)
* (inspect '(1 "hello" #p"~/git/nyxt/source/buffer.lisp" 3.556d0))
The object is a proper list of length 4.
0. 0: 1
1. 1: "hello"
2. 2: #P"~/git/nyxt/source/buffer.lisp"
3. 3: 3.556d0
* (inspect (cons 1 2))
The object is a CONS.
0. CAR: 1
1. CDR: 2


CCL:
* (inspect (find-package :cl))
[0]     #<Package "COMMON-LISP">
[1]     Type: PACKAGE
[2]     Class: #<BUILT-IN-CLASS PACKAGE>
[3]     Internal Symbols: 0
[4]     External Symbols: 978
[5]     PKG.ITAB: (#(0 0 0 0 0 ...) 0 . 36)
[6]     PKG.ETAB: (#(SERIOUS-CONDITION 0 LET *LOAD-TRUENAME* PPRINT-POP ...) 978 . 1009)
[7]     PKG.USED: NIL
[8]     PKG.USED-BY: (#<Package "QUICKLISP-CLIENT"> #<Package "QL-BUNDLE">
              #<Package "QL-DIST-USER"> #<Package "QL-DIST">
              #<Package "QL-CDB"> ...)
[9]     PKG.NAMES: ("COMMON-LISP" "CL")
[10]    PKG.SHADOWED: NIL
[11]    PKG.LOCK: #<READ-WRITE-LOCK [ptr @ #xCD3F00] #x30200000BDAD>
[12]    PKG.INTERN-HOOK: NIL
* (inspect *readtable*)
[0]     #<READTABLE #x302000313D3D>
[1]     Type: READTABLE
[2]     Class: #<BUILT-IN-CLASS READTABLE>
[3]     TYPE: (READTABLE . #<CCL::CLASS-WRAPPER READTABLE #x3000400784BD>)
[4]     RDTAB.TTAB: #<SPARSE-VECTOR 1114112 (UNSIGNED-BYTE 8) #x302000313D6D>
[5]     RDTAB.MACROS: #<SPARSE-VECTOR 1114112 T #x302000313C6D>
[6]     RDTAB.CASE: :UPCASE
* (inspect (make-instance 'foo))
[0]     #<FOO #x3020010BA4FD>
[1]     Class: #<STANDARD-CLASS FOO>
[2]     Wrapper: #<CCL::CLASS-WRAPPER FOO #x3020010BBFAD>
        Instance slots
[3]     SLOT-A: 5
* (inspect (make-instance 'error))
[0]     #<ERROR #x3020010B66ED>
[1]     Class: #<STANDARD-CLASS ERROR>
[2]     Wrapper: #<CCL::CLASS-WRAPPER ERROR #x3020000E295D>
        No Slots
* (inspect (open #p"~/git/nyxt/source/buffer.lisp"))
[0]     #<BASIC-FILE-CHARACTER-INPUT-STREAM ("/home/aartaka/git/nyxt/source/buffer.lisp"/6 UTF-8) #x3020010B33ED>
[1]     Type: CCL::BASIC-FILE-CHARACTER-INPUT-STREAM
[2]     Class: #<BUILT-IN-CLASS CCL::BASIC-FILE-CHARACTER-INPUT-STREAM>
[3]     0: #<CCL::CLASS-WRAPPER CCL::BASIC-FILE-CHARACTER-INPUT-STREAM #x30200010451D>
[4]     1: 5
[5]     2: #S(CCL::FILE-IOBLOCK :STREAM #<BASIC-FILE-CHARACTER-INPUT-STREAM ("/home/aartaka/git/nyxt/source/buffer.lisp"/6 UTF-8) #x3020010B33ED>
                        :UNTYI-CHAR NIL ...)
[6]     3: (:ELEMENT-TYPE BASE-CHAR)
[7]     4: "/home/aartaka/git/nyxt/source/buffer.lisp"
[8]     5: NIL
[9]     6: #<EXTERNAL-FORMAT :UTF-8/:UNIX #x302000482DCD>
* (inspect #(1 "hello" #p"path" #c(1 3)))
[0]     #(1 "hello" #P"path" #C(1 3))
[1]     Type: (SIMPLE-VECTOR 4)
[2]     Class: #<BUILT-IN-CLASS SIMPLE-VECTOR>
[3]     Length: 4
[4]     0: 1
[5]     1: "hello"
[6]     2: #P"path"
[7]     3: #C(1 3)
* (inspect #p"~/git/nyxt/source/buffer.lisp")
[0]     #P"/home/aartaka/git/nyxt/source/buffer.lisp"
[1]     Type: PATHNAME
[2]     Class: #<BUILT-IN-CLASS PATHNAME>
[3]     TYPE: (PATHNAME . #<CCL::CLASS-WRAPPER PATHNAME #x30004003E95D>)
[4]     %PATHNAME-DIRECTORY: (:ABSOLUTE "home" "aartaka" "git" "nyxt" ...)
[5]     %PATHNAME-NAME: "buffer"
[6]     %PATHNAME-TYPE: "lisp"
[7]     %PHYSICAL-PATHNAME-VERSION: :NEWEST
[8]     %PHYSICAL-PATHNAME-DEVICE: NIL
* (inspect (make-random-state))
[0]     #.(CCL::INITIALIZE-MRG31K3P-STATE 1270880143 176389872 314159 498615371 352341342 271828)
[1]     Type: RANDOM-STATE
[2]     Class: #<BUILT-IN-CLASS RANDOM-STATE>
[3]     TYPE: (RANDOM-STATE . #<CCL::CLASS-WRAPPER RANDOM-STATE #x30004005EDAD>)
[4]     RANDOM.MRG31K3P-STATE: #(1270880143 176389872 314159 498615371 352341342 ...)
* (inspect (let ((ht (make-hash-table :test #'equal)))
  (setf (gethash #c(1 3) ht) 1)
  (setf (gethash 1 ht) "hello")
  (setf (gethash "hello" ht) #p"path")
  (setf (gethash #p"path" ht) #c(1 3))
  ht))
[0]     #<HASH-TABLE :TEST EQUAL size 4/60 #x30200101CEDD>
[1]     Type: HASH-TABLE
[2]     Class: #<BUILT-IN-CLASS HASH-TABLE>
[3]     TYPE: (HASH-TABLE . #<CCL::CLASS-WRAPPER HASH-TABLE #x30004002B0BD>)
[4]     NHASH.KEYTRANSF: #<Compiled-function CCL::%%EQUALHASH #x3000000C562F>
[5]     NHASH.COMPAREF: #<Compiled-function EQUAL #x3000000859CF>
[6]     NHASH.REHASH-BITS: NIL
[7]     NHASH.VECTOR: #<HASH-TABLE-VECTOR #x30200101D00D>
[8]     NHASH.LOCK: 524288
[9]     NHASH.OWNER: NIL
[10]    NHASH.GROW-THRESHOLD: 56
[11]    NHASH.REHASH-RATIO: 1.1764705
[12]    NHASH.REHASH-SIZE: 1.5
[13]    NHASH.PUTHASH-COUNT: 0
[14]    NHASH.EXCLUSION-LOCK: #<RECURSIVE-LOCK [ptr @ #x7F1B0C012140] #x30200101CF6D>
[15]    NHASH.FIND: #<Compiled-function CCL::GENERAL-HASH-FIND #x3000000EAAAF>
[16]    NHASH.FIND-NEW: #<Compiled-function CCL::GENERAL-HASH-FIND-FOR-PUT #x3000000EC24F>
[17]    NHASH.READ-ONLY: NIL
[18]    NHASH.MIN-SIZE: 60
* (inspect #*1010001)
[0]     #*1010001
[1]     Type: (SIMPLE-BIT-VECTOR 7)
[2]     Class: #<BUILT-IN-CLASS SIMPLE-BIT-VECTOR>
[3]     Length: 7
[4]     0: 1
[5]     1: 0
[6]     2: 1
[7]     3: 0
[8]     4: 0
[9]     5: 0
[10]    6: 1
* (inspect (find-class 'standard-class))
[0]     #<STANDARD-CLASS STANDARD-CLASS>
[1]     Class: #<STANDARD-CLASS STANDARD-CLASS>
[2]     Wrapper: #<CCL::CLASS-WRAPPER STANDARD-CLASS #x30200001DB3D>
        Instance slots
[3]     CCL::DIRECT-METHODS: (#<CCL::STANDARD-KERNEL-METHOD (SETF
                                                     DOCUMENTATION) (T
                                                                     STANDARD-CLASS
                                                                     (EQL T))>
                      #<CCL::STANDARD-KERNEL-METHOD DOCUMENTATION (STANDARD-CLASS
                                                                   (EQL T))>
                      #<CCL::STANDARD-KERNEL-METHOD (SETF
                                                     DOCUMENTATION) (T
                                                                     STANDARD-CLASS
                                                                     #)>
                      #<CCL::STANDARD-KERNEL-METHOD DOCUMENTATION #> #<#> ...)
[4]     CCL::PROTOTYPE: NIL
[5]     CCL::NAME: STANDARD-CLASS
[6]     CCL::PRECEDENCE-LIST: (#<STANDARD-CLASS STANDARD-CLASS>
                       #<STANDARD-CLASS CCL::STD-CLASS>
                       #<STANDARD-CLASS CCL::SLOTS-CLASS>
                       #<STANDARD-CLASS CLASS> #<STANDARD-CLASS SPECIALIZER>
                       ...)
[7]     CCL::OWN-WRAPPER: #<CCL::CLASS-WRAPPER STANDARD-CLASS #x30200001DB3D>
[8]     CCL::DIRECT-SUPERCLASSES: (#<STANDARD-CLASS CCL::STD-CLASS>)
[9]     CCL::DIRECT-SUBCLASSES: NIL
[10]    CCL::DEPENDENTS: NIL
[11]    CCL::CLASS-CTYPE: #<CLASS-CTYPE STANDARD-CLASS>
[12]    CCL::DIRECT-SLOTS: NIL
[13]    CCL::SLOTS: (#<STANDARD-EFFECTIVE-SLOT-DEFINITION for instance slot CCL::DIRECT-METHODS #x3000400F7BED>
             #<STANDARD-EFFECTIVE-SLOT-DEFINITION for instance slot CCL::PROTOTYPE #x3000400F7C0D>
             #<STANDARD-EFFECTIVE-SLOT-DEFINITION for instance slot CCL::NAME #x3000400F7C2D>
             #<STANDARD-EFFECTIVE-SLOT-DEFINITION for instance slot CCL::PRECEDENCE-LIST #x3000400F7C4D>
             #<STANDARD-EFFECTIVE-SLOT-DEFINITION for instance slot CCL::OWN-WRAPPER #x3000400F7C6D>
             ...)
[14]    CCL::INFO: (NIL . STANDARD-CLASS)
[15]    CCL::DIRECT-DEFAULT-INITARGS: NIL
[16]    CCL::DEFAULT-INITARGS: NIL
[17]    CCL::ALIST: NIL
[18]    CCL::MAKE-INSTANCE-INITARGS: T
* (inspect '(1 "hello" #p"~/git/nyxt/source/buffer.lisp" 3.556d0))
[0]     (1 "hello" #P"/home/aartaka/git/nyxt/source/buffer.lisp" 3.556D0)
[1]     Type: CONS
[2]     Class: #<BUILT-IN-CLASS CONS>
        Normal List
[3]     Length: 4
[4]     0: 1
[5]     1: "hello"
[6]     2: #P"/home/aartaka/git/nyxt/source/buffer.lisp"
[7]     3: 3.556D0


ECL:
* (inspect (find-package :cl))
 nicknames:  ("CL")
 used-by list:  (#<"SB-BSD-SOCKETS" package> #<"QUICKLISP-CLIENT" package>
                 #<"QL-BUNDLE" package> ...)
* (inspect *readtable*)
#<readtable 0x7fd04e005ec0> - READTABLE
* (inspect (make-instance 'foo))
#<a COMMON-LISP-USER::FOO 0x7f828cb93280> - clos object:
    - it is an instance of class named FOO,
    - it has 1 local slots and 0 class slots: 
    The local slots are:
     name : SLOT-A
     value:
        5
    It has no class slots.
* (inspect (make-instance 'error))
#<a ERROR 0x7f828cb93140> - clos object:
    - it is an instance of class named ERROR,
    - it has 0 local slots and 1 class slots: 
    It has no local slots.
    The class slots are:
     name : SI:REPORT-FUNCTION
     value:
        NIL
* (inspect (open #p"~/git/nyxt/source/buffer.lisp"))
#<input stream #P"/home/aartaka/git/nyxt/source/buffer.lisp" 0x7f828cd075a0> - FILE-STREAM
* (inspect #(1 "hello" #p"path" #c(1 3)))
#(1 "hello" #P"path" ...) - simple vector
 dimension:  4
 aref 0:
    1
 aref 1:
    "hello"
 aref 2:
    #P"path"
 aref 3:
    #C(1 3)
* (inspect #p"~/git/nyxt/source/buffer.lisp")
#P"/home/aartaka/git/nyxt/source/buffer.lisp" - PATHNAME
* (inspect (make-random-state))
#<random-state 0x7f828cdf0000> - RANDOM-STATE
* (inspect (let ((ht (make-hash-table :test #'equal)))
  (setf (gethash #c(1 3) ht) 1)
  (setf (gethash 1 ht) "hello")
  (setf (gethash "hello" ht) #p"path")
  (setf (gethash #p"path" ht) #c(1 3))
  ht))
#<hash-table 0x7f828d39cea0> - hash table: 
 key  : "hello"
 value:
    #P"path"
 key  : 1
 value:
    "hello"
 key  : #P"path"
 value:
    #C(1 3)
 key  : #C(1 3)
 value:
    1
* (inspect #*1010001)
#*1010001 - vector
 dimension:  7
 aref 0:
    1
 aref 1:
    0
 aref 2:
    1
 aref 3:
    0
 aref 4:
    0
 aref 5:
    0
 aref 6:
    1
* (inspect (find-class 'standard-class))
#<The STANDARD-CLASS STANDARD-CLASS> - clos object:
    - it is an instance of class named STANDARD-CLASS,
    - it has 22 local slots: 
    The (local) slots are:
     name : CLOS::FLAG
     value:
        NIL
     name : CLOS::HOLDER
     value:
        ((#<standard-reader-method EQL-SPECIALIZER-FLAG (STANDARD-CLASS)> #<standard-writer-method (SETF EQL-SPECIALIZER-FLAG) (T STANDARD-CLASS)> #<standard-reader-method SPECIALIZER-METHOD-HOLDER (STANDARD-CLASS)> ...))
     name : CLOS::SLOT-PADDING
     value: Unbound
     name : CLOS::NAME
     value:
        STANDARD-CLASS
     name : CLOS::DIRECT-SUPERCLASSES
     value:
        (#<The STANDARD-CLASS CLOS::STD-CLASS>)
     name : CLOS::DIRECT-SUBCLASSES
     value:
        NIL
     name : CLOS::SLOTS
     value:
        (#<a CLOS:STANDARD-EFFECTIVE-SLOT-DEFINITION 0x7f828e7b0580> #<a CLOS:STANDARD-EFFECTIVE-SLOT-DEFINITION 0x7f828e7b0540> #<a CLOS:STANDARD-EFFECTIVE-SLOT-DEFINITION 0x7f828e7b0500> ...)
     name : CLOS::PRECEDENCE-LIST
     value:
        (#<The STANDARD-CLASS STANDARD-CLASS> #<The STANDARD-CLASS CLOS::STD-CLASS> #<The STANDARD-CLASS CLASS> ...)
     name : CLOS::DIRECT-SLOTS
     value:
        (#<a CLOS:STANDARD-DIRECT-SLOT-DEFINITION 0x7f828e7b0b00> #<a CLOS:STANDARD-DIRECT-SLOT-DEFINITION 0x7f828e7b0ac0> #<a CLOS:STANDARD-DIRECT-SLOT-DEFINITION 0x7f828e7b0a80> ...)
     name : CLOS::DIRECT-DEFAULT-INITARGS
     value:
        NIL
     name : CLOS::DEFAULT-INITARGS
     value:
        NIL
     name : CLOS::FINALIZED
     value:
        T
     name : CLOS:DOCSTRING
     value: Unbound
     name : CLOS::SIZE
     value:
        22
     name : CLOS::SEALEDP
     value:
        NIL
     name : CLOS::PROTOTYPE
     value: Unbound
     name : CLOS::DEPENDENTS
     value:
        NIL
     name : CLOS::VALID-INITARGS
     value:
        NIL
     name : CLOS:SLOT-TABLE
     value:
        #<hash-table 0x7f828e7d4630>
     name : CLOS::LOCATION-TABLE
     value:
        #<hash-table 0x7f828e7d45a0>
     name : CLOS::OPTIMIZE-SLOT-ACCESS
     value: Unbound
     name : CLOS::FORWARD
     value: Unbound
>> (inspect '(1 "hello" #p"~/git/nyxt/source/buffer.lisp" 3.556d0))
(1 "hello" #P"/home/aartaka/git/nyxt/source/buffer.lisp" ...) - cons
 nth 0:
    1  >> 
 nth 1:
    "hello"
 nth 2:
    #P"/home/aartaka/git/nyxt/source/buffer.lisp"
 nth 3:
    3.556d0
 nthcdr 4: NIL
* (inspect (cons 1 2))
(1 . 2) - cons
 nth 0:
    1
 nthcdr 1:
    2


ABCL:
* (inspect (find-package :cl))
The COMMON-LISP package
* (inspect *readtable*)
An object of type READTABLE at #x7A3803F
* (inspect (make-instance 'foo))
   0 LAYOUT -----------> #<LAYOUT {43E46931}>
   1 SLOT-A -----------> 5
* (inspect (make-instance 'error))
   0 LAYOUT -----------> #<LAYOUT {4E90A029}>
   1 FORMAT-CONTROL ---> #<UNBOUND>
   2 FORMAT-ARGUMENTS -> NIL
* (inspect (open #p"~/git/nyxt/source/buffer.lisp"))
An object of type FILE-STREAM at #x2AA7E131
   0 class ------------> #<STRUCTURE-CLASS FILE-STREAM {4BC72171}>
* (inspect #(1 "hello" #p"path" #c(1 3)))
A simple vector with 4 elements at #x37965E0D
   0-> 1
   1-> hello
   2-> path
   3-> #C(1 3)
* (inspect #p"~/git/nyxt/source/buffer.lisp")
An object of type PATHNAME at #x575B042F
   0 HOST -------------> NIL
   1 DEVICE -----------> NIL
   2 DIRECTORY --------> (:ABSOLUTE "home" ...)
   3 NAME -------------> "buffer"
   4 TYPE -------------> "lisp"
   5 VERSION ----------> NIL
* (inspect (make-random-state))
An object of type RANDOM-STATE at #x4B085E1
* (inspect (let ((ht (make-hash-table :test #'equal)))
  (setf (gethash #c(1 3) ht) 1)
  (setf (gethash 1 ht) "hello")
  (setf (gethash "hello" ht) #p"path")
  (setf (gethash #p"path" ht) #c(1 3))
  ht))
An object of type HASH-TABLE at #x412C1A1F
   0 KEY [bucket 0] ---> 1
   1 VALUE ------------> "hello"
   2 KEY [bucket 2] ---> #P"path"
   3 VALUE ------------> #C(1 3)
   4 KEY [bucket 2] ---> #C(1 3)
   5 VALUE ------------> 1
   6 KEY [bucket 10] --> "hello"
   7 VALUE ------------> #P"path"
* (inspect #*1010001)
An object of type (SIMPLE-BIT-VECTOR 7) at #x41BADC20
   0-> 1
   1-> 0
   2-> 1
   3-> 0
   4-> 0
   5-> 0
   6-> 1
* (inspect (find-class 'standard-class))
   0 NAME -------------> NIL
   1 LAYOUT -----------> #<LAYOUT {1685034C}>
   2 DIRECT-SUPERCLASSES -> (#<STANDARD-CLASS CLASS {3A93256F}>)
   3 DIRECT-SUBCLASSES -> (#<STANDARD-CLASS JAVA-CLASS {1CAFDD50}>)
   4 CLASS-PRECEDENCE-LIST -> (#<STANDARD-CLASS STANDARD-CLASS {479AD690}> #<STANDARD-CLASS CLASS {3A93256F}> ...)
   5 DIRECT-METHODS ---> (#<STANDARD-METHOD MOP:MAP-DEPENDENTS (STANDARD-CLASS T) {3F4CB818}> #<STANDARD-METHOD MOP:REMOVE-DEPENDENT (STANDARD-CLASS T) {270F9C12}> ...)
   6 DOCUMENTATION ----> NIL
   7 DIRECT-SLOTS -----> (#<SYSTEM:SLOT-DEFINITION SYSTEM:NAME {30430F0F}> #<SYSTEM:SLOT-DEFINITION SYSTEM:LAYOUT {E62E528}> ...)
   8 SLOTS ------------> (#<SYSTEM:SLOT-DEFINITION SYSTEM:NAME {30430F0F}> #<SYSTEM:SLOT-DEFINITION SYSTEM:LAYOUT {E62E528}> ...)
   9 DIRECT-DEFAULT-INITARGS -> NIL
  10 DEFAULT-INITARGS -> NIL
* (inspect '(1 "hello" #p"~/git/nyxt/source/buffer.lisp" 3.556d0))
A proper list with 4 elements at #x54B41084
   0-> 1
   1-> "hello"
   2-> #P"/home/aartaka/git/nyxt/source/buffer.lisp"
   3-> 3.556d0
* (inspect (cons 1 2))
A dotted list with 1 elements at #xF80F90C
   0-> 1
tail-> 2


CLISP:
* (inspect (find-package :cl))
#<PACKAGE COMMON-LISP>:  atom
 type: PACKAGE
 class: #1=#<BUILT-IN-CLASS PACKAGE>
* (inspect (make-instance 'foo))
#<COMMON-LISP-USER::FOO #x0000008000B5BDD1>:  standard object
 type: COMMON-LISP-USER::FOO
0 [SLOT-A]:  5
* (inspect (make-instance 'error))
#<ERROR #x0000008000B654A1>:  standard object
 type: ERROR
* (inspect (open #p"~/git/nyxt/source/buffer.lisp"))
#<INPUT BUFFERED FILE-STREAM CHARACTER
  #P"/home/aartaka/git/nyxt/source/buffer.lisp" @1>:  atom
 type: FILE-STREAM
 class: #1=#<BUILT-IN-CLASS FILE-STREAM>
* (inspect #(1 "hello" #p"path" #c(1 3)))
#<ARRAY T (4) #x000000800099FB41>:  Vector
 dimension: 4
 element-type: T
 no fill pointer
 not displaced
0:  1
1:  "hello"
2 more slots available (use :e to increase CUSTOM:*INSPECT-LENGTH*)
* (inspect #p"~/git/nyxt/source/buffer.lisp")
#P"/home/aartaka/git/nyxt/source/buffer.lisp":  atom
 type: PATHNAME
 class: #1=#<BUILT-IN-CLASS PATHNAME>
* (inspect (make-random-state))
#S(RANDOM-STATE #<ARRAY BIT (64) #x00000080009A6681>):  atom
 type: RANDOM-STATE
 class: #1=#<BUILT-IN-CLASS RANDOM-STATE>
* (inspect (let ((ht (make-hash-table :test #'equal)))
  (setf (gethash #c(1 3) ht) 1)
  (setf (gethash 1 ht) "hello")
  (setf (gethash "hello" ht) #p"path")
  (setf (gethash #p"path" ht) #c(1 3))
  ht))
#<HASH-TABLE :TEST EXT:FASTHASH-EQUAL :COUNT 4 #x00000080009AA1B9>:  Hash Table
 count: 4
 size: 5
 rehash-size: 1.5s0
 rehash-threshold: 0.75s0
 test: FASTHASH-EQUAL
0 [path]:  #C(1 3)
1 [hello]:  #P"path"
2 more slots available (use :e to increase CUSTOM:*INSPECT-LENGTH*)
* (inspect #*1010001)
#<ARRAY BIT (7) #x00000080009B6B91>:  Vector
 dimension: 7
 element-type: BIT
 no fill pointer
 not displaced
0:  1
1:  0
5 more slots available (use :e to increase CUSTOM:*INSPECT-LENGTH*)
* (inspect (find-class 'standard-class))
#1=#<STANDARD-CLASS STANDARD-CLASS>:  standard object
 type: STANDARD-CLASS
0 [$HASHCODE]:  219684181035213
1 [$CLASSNAME]:  STANDARD-CLASS
2 [$DIRECT-SUBCLASSES]:  NIL
3 [$DIRECT-METHODS]:  
#1=#<WEAK-LIST
     ..>
4 [$DIRECT-SUPERCLASSES]:  #1=(#2=#<STANDARD-CLASS CLOS::SEMI-STANDARD-CLASS>)
5 [$ALL-SUPERCLASSES]:  
#<HASH-TABLE :TEST EXT:STABLEHASH-EQ :WARN-IF-NEEDS-REHASH-AFTER-GC T :COUNT 11
  #x0000008000139249>
6 [$PRECEDENCE-LIST]:  
#1=(#2=#<STANDARD-CLASS STANDARD-CLASS>
    #3=#<STANDARD-CLASS CLOS::SEMI-STANDARD-CLASS>
    #4=#<STANDARD-CLASS CLOS::SLOTTED-CLASS> #5=#<STANDARD-CLASS CLASS>
    #6=#<STANDARD-CLASS CLOS::POTENTIAL-CLASS>
    #7=#<STANDARD-CLASS CLOS:SPECIALIZER> #8=#<STANDARD-CLASS CLOS::SUPER-CLASS>
    ..)
7 [$DIRECT-SLOTS]:  NIL
8 [$SLOTS]:  
(#<CLOS:STANDARD-EFFECTIVE-SLOT-DEFINITION CLOS::$HASHCODE #x0000008000139501>
 ..)
9 [$SLOT-LOCATION-TABLE]:  
#<HASH-TABLE :TEST EXT:STABLEHASH-EQ :WARN-IF-NEEDS-REHASH-AFTER-GC T :COUNT 27
  #x000000800013A551>
10 [$DIRECT-DEFAULT-INITARGS]:  NIL
11 [$DEFAULT-INITARGS]:  ((:FIXED-SLOT-LOCATIONS NIL #<COMPILED-FUNCTION CLOS::CONSTANT-INITFUNCTION>))
12 [$DOCUMENTATION]:  NIL
13 [$LISTENERS]:  NIL
14 [$INITIALIZED]:  6
15 [$SUBCLASS-OF-STABLEHASH-P]:  T
16 [$GENERIC-ACCESSORS]:  T
17 [$DIRECT-ACCESSORS]:  NIL
18 [$VALID-INITARGS-FROM-SLOTS]:  
(:NAME :DIRECT-SUPERCLASSES :DIRECT-SLOTS :DIRECT-DEFAULT-INITARGS :DOCUMENTATION
 :FIXED-SLOT-LOCATIONS)
19 [$INSTANCE-SIZE]:  28
20 [$CURRENT-VERSION]:  #<ARRAY T (10) #x0000008000124B79>
21 [$FUNCALLABLEP]:  NIL
22 [$FIXED-SLOT-LOCATIONS]:  T
23 [$INSTANTIATED]:  T
24 [$DIRECT-INSTANCE-SPECIALIZERS]:  NIL
25 [$FINALIZED-DIRECT-SUBCLASSES]:  NIL
26 [$PROTOTYPE]:  NIL
* (inspect '(1 "hello" #p"~/git/nyxt/source/buffer.lisp" 3.556d0))
(1 "hello" #P"/home/aartaka/git/nyxt/source/buffer.lisp" 3.556d0):  Cons
 a list of length 4
0:  1
1:  "hello"
2:  #P"/home/aartaka/git/nyxt/source/buffer.lisp"
3:  3.556d0
* (inspect (cons 1 2))
(1 . 2):  Cons
 a cons
0:  1
1:  2



GCL:
* (inspect (find-package :cl))
#<"COMMON-LISP" package> - package
 nicknames:  ("LISP" "CL")
 used-by list:  (#<"CONDITIONS" package> #<"PCL" package>
                 #<"ITERATE" package> ...)

* (inspect *readtable*)
#<readtable 000000000092f118> - READTABLE
* (inspect (make-instance 'foo))
Structure of type STD-INSTANCE 
Byte:[Slot Type]Slot Name   :Slot Value
   0:WRAPPER             :#(27578917 112726258 37085606 ...)
   8:SLOTS               :#(5)
* (inspect (make-instance 'error))
Structure of type STD-INSTANCE 
Byte:[Slot Type]Slot Name   :Slot Value
   0:WRAPPER             :#(58464560 96651159 74108955 ...)
   8:SLOTS               :#()
* (inspect (open #p"~/git/nyxt/source/buffer.lisp"))
#<input stream #p"/home/aartaka/git/nyxt/source/buffer.lisp"> - STREAM
* (inspect #(1 "hello" #p"path" #c(1 3)))
#(1 "hello" #p"path" ...) - simple vector
 dimension:  4 
 aref 0:
    1
 aref 1:
    "hello"
 aref 2:
    #p"path"
 aref 3:
    #C(1 3)
* (inspect #p"~/git/nyxt/source/buffer.lisp")
#p"/home/aartaka/git/nyxt/source/buffer.lisp" - PATHNAME
* (inspect (make-random-state))
#$53120979506490321471057237946774974193465499685846973901502889152186299140726528384145097416837086742190128101700985775716804659047410645609307249694317030262380960685024857590664169567247009853827525540412470422713985537045944347055931012459915634675061513724249310606293220883397766025363656869544033378132124469164661854803188009502133827819278604792205732197376582397326999434666443695007047568907466672030828303283234171120555600941806827398796141261290757306137482328806009554029844630697029755053324278036802598919998630952835863875779828879257714878417183574212274559076518961336047811282705043154826409000044901506173482846321289822308268448232964883085613082089538674563863244125470067043597774590409560574645461677304642262792151341926595301698884609882362161268962178389693347063116604724748800085332531717303231516422179217993490349875804589565547432109104486077318034576861635783339322254102799583223119694060656257346092542235000424005215040866320666823477267136120408077233924929937353812196573561931546804236174669989171218318502064132870825285252775801269222962603014743063000391230848940166600316130773944638140989994152448513961499360506999470782906805256643203631838269688173308276672066409879072486385908903642380614848065135079640391668586503840940118787576608786510562391015628583579173519679882782269379884966223967440510534403413529110577920281485713964885320726496753577433736529486510449645469628286646192720919128111865252545079810705385198640870119135685332678425448545781788076715184256387364865668753202161198113996851298997445569410933757499441311922882780119879250801149486421655333113339435224266254469391375299041599943177804993045226201744011772572835345892141264151173979865463683472702272177503891396083550683808166266489059262437987255457030040142789370996888972338047475301847217259581285470848955571830553388713250988430990478786246358122845633097259821222703024358338953893253636796896089402615637288141290717422363101629126609294648489691812980123682368441311262129870090600934109311926443013251946222684825305055169753893633959493103979790349057227452730301070034477057759828456214251622365462403744414326023098338672231435644015738802859534387724873674387810063370177915246036272402013382414995239120741304122605646508921333904413970195479651889078605685201713415588480579207235018802838771346987404624834861040327503475432783926115142301176510933873621808221406488676618902651263834987712127381915328452594088414442885904159171702844868909670017860945248458318210271173764490908492786401827646145348545859097118113641864094386640921603342749885168821511653196685645544195609580665729388593769167299691917233468936428654569870833254167157930629986069650123223491041645566630566383323107926663531732563168696359937179656646266564572517639717581685224921519233911860308405049531712595498813514475122897363964587388018348008435259345366981844449328182328637256266240082412199812590481993899787879383284809680174469878204525206912252135612467848852233176356202387017880424049671340954687095655961067494125686829438400192314983880674602986416101560660494494954688624857652271719648577884928015282989098716450956058332783346209117759770716819917784040442848845086094345669288775371899377840421444503824465731945195792920428586149539316358932301593249162522269666955241038087530309482603539511669515118482145564781125042533457257760959036039696829219413403864275997174761544148589213253007087665717014076865901063847089105280420412196083685818416853463170840616689289973204057907150382197843944576975243669117367768295105911710213996978838267196692800818871033857957745803432478291875148446692247561521395276613658404849593864047810171690353091395574637554081432964291691024212708176845852872514367483173182298937389465086487805623513754726875346445538202439806690165805084176694224783754032541832907868601333414408614097613097334195415831974196385477880919343875700938956929525640252925417832935256770509304285895827816971311673117451288322470117123701952851259464678204719905015051647738682381001428838770222000373501745719309722614838237064696963107778620747106160982432664194187652192533363702791944416312282899375362676628587975500768665835965642214489782905667022837077164562768886621993956009831814989546815778732154160200380926740279615461019244462849783661591708537201349299113932365605489529082188675994720005671367046787704121427684310389134689928376307648424213470555116228718935645147337153331369897163350923559534258194789367502763483916583614901611011789146263139378681042838665037138046191863392375483387321851533979577166628054461463259974127685343990302301209923167249565982973905245885939597494575810873337066965207188854330354836564440965952603861012171255122112834069265155035258165923158304827843819518658346828105794029933031977068704936798641655581603849656315512797947407400269718753232554390341526861886089525629367701016593432390247450881419487406477383845660255308407428805458772351781281659320336994815282945867834050511356076605494613759351507349934496904339148718404289621622960962879593101728112697511339026040276011839656896610155996184938229632018068892653798864216923797329531003809141234092850959056201727755622757013342039879811913803263056002999879462946192322903146962459724214814147735766270241170338016419332093239103131086766262351141636111168372294008058400219331289649486245212854352056901000413406026123578499313429011486362117026059118747904428539175517280464109458187949423873759497792142449978390505744515709098384313756601725497004723670662974522116451775012483599551145055343879085480680204971137340672710814777177406015767515056976358659803470039718405582375114392337623690546495350723998855177414494537636538275435962498128788597444937368269842364812028123132989945030514520315833866621990960217440616667767400145667261128799384497651328968384809992342097226980758685314427177517916771164130610529076263916084155300715346671108754523628176238918098516426664401099507367723530910406699377901295219421875362317973529439170585 - RANDOM-STATE
* (inspect (let ((ht (make-hash-table :test #'equal)))
  (setf (gethash #c(1 3) ht) 1)
  (setf (gethash 1 ht) "hello")
  (setf (gethash "hello" ht) #p"path")
  (setf (gethash #p"path" ht) #c(1 3))
  ht))
#<hash-table 0000000000e38710> - HASH-TABLE
* (inspect #*1010001)
#*1010001 - vector
 dimension:  7 
 aref 0:
    1
 aref 1:
    0
 aref 2:
    1
 aref 3:
    0
 aref 4:
    0
 aref 5:
    0
 aref 6:
    1
* (inspect (find-class 'standard-class))
Structure of type STD-INSTANCE 
Byte:[Slot Type]Slot Name   :Slot Value
   0:WRAPPER             :#(81226257 5359113 85274058 ...)
   8:SLOTS               :#((CLASS #<Standard-Class STANDARD-CLASS 44573270>)
                            NIL NIL ...)
* (inspect '(1 "hello" #p"~/git/nyxt/source/buffer.lisp" 3.556d0))
(1 "hello" #p"/home/aartaka/git/nyxt/source/buffer.lisp" ...) - cons
 nth 0:
    1
 nth 1:
    "hello"
 nth 2:
    #p"/home/aartaka/git/nyxt/source/buffer.lisp"
 nth 3:
    3.556
 nthcdr 4:
    NIL
* (inspect (cons 1 2))
(1 . 2) - cons
 nth 0:
    1
 nthcdr 1:
    2

Allegro:
* (inspect (find-package :cl))
A TENURED The COMMON-LISP package @ #x10000206052
   0 Class --------> #<STRUCTURE-CLASS PACKAGE>
   1 TABLES -------> (NIL), a proper list with 1 element
   2 INTERNAL-NAME -> A simple-string (11) "COMMON-LISP"
   3 INTERNAL-NICKNAMES -> ("CL" "LISP"), a proper list with 2 elements
   4 INTERNAL-USE-LIST -> symbol NIL
   5 INTERNAL-USED-BY-LIST -> (#<The NET.URI package> ...), a proper list with 22 elements
   6 INTERNAL-SYMBOLS -> symbol NIL
   7 EXTERNAL-SYMBOLS -> #<SYMBOL hash-table (sans values) with 978 entries
                           @ #x10000205b92>
   8 INTERNAL-SHADOWING-SYMBOLS -> symbol NIL
   9 LOCK ---------> symbol T
  10 DEFINITION-LOCK -> symbol T
  11 INTERNAL-IMPLEMENTATION-PACKAGES -> ("EXCL" "COMP" "CLOS" ...), a proper list with 5 elements
  12 INTERNAL-INDEX -> fixnum 1 [#x0000000000000008]
  13 DOCUMENTATION -> symbol NIL
  14 PLIST --------> symbol NIL
  15 MODE ---------> symbol :DEPENDENT
  16 DIRECT-PARENT -> symbol NIL
  17 FULL-NAME ----> A simple-string (11) "COMMON-LISP"
  18 DIRECT-CHILDREN -> symbol NIL
  19 FOREIGN-PROTOCOL -> symbol NIL
  20 FLAT ---------> symbol NIL
  21 INTERNAL-ALTERNATE-NAME -> symbol NIL
* (inspect (make-instance 'foo))
A NEW FOO @ #x100078541b2 = #<FOO @ #x100078541b2>
   0 Class --------> #<STANDARD-CLASS FOO>
   1 SLOT-A -------> fixnum 5 [#x0000000000000028]
* (inspect (make-instance 'error))
A NEW ERROR @ #x10007856392 = #<ERROR @ #x10007856392>
   0 Class --------> #<STANDARD-CLASS ERROR>
   1 FORMAT-CONTROL -> symbol :--UNBOUND--
   2 FORMAT-ARGUMENTS -> symbol NIL
   3 PLIST --------> symbol NIL
* (inspect (open #p"~/git/nyxt/source/buffer.lisp"))
A NEW FILE-SIMPLE-STREAM @ #x10007859f02 = #<FILE-SIMPLE-STREAM
                                             #P"/home/aartaka/git/nyxt/source/buffer.lisp" for input pos 0
                                             @
                                             #x10007859f02>
   0 Class --------> #<STANDARD-CLASS FILE-SIMPLE-STREAM>
   1 LOCK-CONTROL -> BASIC-LOCK = #S(BASIC-LOCK :SMPLOCKER NIL ...)
   2 J-UNREAD-BYTE -> #<Function SINGLE-CHANNEL-UNREAD-BYTE>
   3 J-WRITE-BYTE -> #<Function SINGLE-CHANNEL-WRITE-BYTE>
   4 J-READ-BYTE --> #<Function SINGLE-CHANNEL-READ-BYTE>
   5 J-UNREAD-CHAR -> #<Function SINGLE-CHANNEL-UNREAD-CHAR>
   6 J-WRITE-CHARS -> #<Function (:EFFT SC-WRITE-CHARS :UTF8-BASE)>
   7 J-WRITE-CHAR -> #<Function (:EFFT SC-WRITE-CHAR :UTF8-BASE)>
   8 J-READ-CHARS -> #<Function (:EFFT SC-READ-CHARS :UTF8-BASE)>
   9 J-READ-CHAR --> #<Function (:EFFT SC-READ-CHAR :UTF8-BASE)>
  10 J-LISTEN -----> #<Function (:EFFT SC-LISTEN :UTF8-BASE)>
  11 REREAD-COUNT -> fixnum 0 [#x0000000000000000]
  12 LAST-CHAR-READ-SIZE -> fixnum 0 [#x0000000000000000]
  13 ENCAPSULATED-CHAR-READ-SIZE -> fixnum 0 [#x0000000000000000]
  14 XPSTRUCT -----> symbol NIL
  15 DRIBBLE-OUT --> symbol NIL
  16 MELDED-STREAM -> #<FILE-SIMPLE-STREAM
                        #P"/home/aartaka/git/nyxt/source/buffer.lisp" for input pos 0
                        @ #x10007859f02>
  17 MELDING-BASE -> #<FILE-SIMPLE-STREAM
                       #P"/home/aartaka/git/nyxt/source/buffer.lisp" for input pos 0
                       @ #x10007859f02>
  18 EXTERNAL-FORMAT -> EXTERNAL-FORMAT = <...>
  19 RECORDINGP ---> symbol NIL
  20 OUTPUT-RECORDING -> symbol NIL
  21 CONTROL-OUT --> symbol NIL
  22 CONTROL-IN ---> symbol NIL
  23 OUTPUT-HANDLE -> symbol NIL
  24 INPUT-HANDLE -> fixnum 5 [#x0000000000000028]
   ...
  39 SRC-POSITION-TABLE -> symbol NIL
* (inspect #(1 "hello" #p"path" #c(1 3)))
A NEW simple T vector (4) @ #x10007864112
   0-> fixnum 1 [#x0000000000000008]
   1-> A simple-string (5) "hello"
   2-> PATHNAME = #P"path"
   3-> COMPLEX object = #C(1 3)
* (inspect #p"~/git/nyxt/source/buffer.lisp")
A NEW PATHNAME @ #x10007866112 = #P"/home/aartaka/git/nyxt/source/buffer.lisp"
   0 Class --------> #<STRUCTURE-CLASS PATHNAME>
   1 HOST ---------> symbol NIL
   2 DEVICE -------> symbol :UNSPECIFIC
   3 DIRECTORY ----> (:ABSOLUTE "home" "aartaka" "git" "nyxt" "source"), a proper list with 6 elements
   4 NAME ---------> A simple-string (6) "buffer"
   5 TYPE ---------> A simple-string (4) "lisp"
   6 VERSION ------> symbol :UNSPECIFIC
   7 NAMESTRING ---> A simple-string (41) that starts "/home/aartaka/gi"
   8 HASH ---------> symbol NIL
   9 DIR-NAMESTRING -> A simple-string (30) "/home/aartaka/git/nyxt/source/"
  10 PLIST --------> symbol NIL
* (inspect (make-random-state))
A NEW RANDOM-STATE @ #x10007869902 = #S(RANDOM-STATE :SMPLOCKER NIL ...)
   0 Class --------> #<STRUCTURE-CLASS RANDOM-STATE>
   1 SMPLOCKER ----> symbol NIL
   2 MTI ----------> fixnum 198 [#x0000000000000630]
   3 FIXSEED ------> simple (UNSIGNED-BYTE 32) vector (624) = #(3960924350 ...)
* (inspect (let ((ht (make-hash-table :test #'equal)))
  (setf (gethash #c(1 3) ht) 1)
  (setf (gethash 1 ht) "hello")
  (setf (gethash "hello" ht) #p"path")
  (setf (gethash #p"path" ht) #c(1 3))
  ht))
A NEW #<EQUAL hash-table with 4 entries @ #x10007875d32>
   0 KEY ----------> PATHNAME = #P"path"
   1 VALUE --------> COMPLEX object = #C(1 3)
   2 KEY ----------> COMPLEX object = #C(1 3)
   3 VALUE --------> fixnum 1 [#x0000000000000008]
   4 KEY ----------> fixnum 1 [#x0000000000000008]
   5 VALUE --------> A simple-string (5) "hello"
   6 KEY ----------> A simple-string (5) "hello"
   7 VALUE --------> PATHNAME = #P"path"
* (inspect #*1010001)
A NEW simple-bit-vector (7) #*1010001 @ #x1000787af92
   0-> The bit 1
   1-> The bit 0
   2-> The bit 1
   3-> The bit 0
   4-> The bit 0
   5-> The bit 0
   6-> The bit 1
* (inspect (find-class 'standard-class))
A TENURED STANDARD-CLASS @ #x1000026a912 = #<STANDARD-CLASS
                                             STANDARD-CLASS>
   0 Class --------> #<STANDARD-CLASS STANDARD-CLASS>
   1 LOCK-CONTROL -> simple T vector (2) = #(NIL NIL)
   2 PLIST --------> symbol NIL
   3 FLAGS --------> fixnum 1 [#x0000000000000008]
   4 DIRECT-METHODS -> ((# # # # # # # # # # # # #)), a proper list with 1 element
   5 NAME ---------> symbol STANDARD-CLASS
   6 DIRECT-SUPERCLASSES -> (#<STANDARD-CLASS EXCL::STD-CLASS>), a proper list with 1 element
   7 DIRECT-SUBCLASSES -> (#<STANDARD-CLASS EXCL.YACC:GRAMMAR-CLASS> ...), a proper list with 2 elements
   8 WRAPPER ------> simple T vector (7) = #(32579421876047339 T ...)
   9 CLASS-PRECEDENCE-LIST -> (#<STANDARD-CLASS STANDARD-CLASS> ...), a proper list with 12 elements
  10 DIRECT-SLOTS -> symbol NIL
  11 SLOTS --------> (# # # # # # # # # # # #), a proper list with 12 elements
  12 PROTOTYPE ----> #<STANDARD-CLASS "Unnamed" @ #x100003b6fa2>
* (inspect '(1 "hello" #p"~/git/nyxt/source/buffer.lisp" 3.556d0))
A NEW proper list @ #x100079fffe1 with 4 elements
   0-> fixnum 1 [#x0000000000000008]
   1-> A simple-string (5) "hello"
   2-> PATHNAME = #P"/home/aartaka/git/nyxt/source/buffer.lisp"
   3-> double-float = 3.556d0 [#x400c72b0 20c49ba6]
* (inspect (cons 1 2))
A dotted list @ #x100079fcea1 with 1 element
   0-> fixnum 1 [#x0000000000000008]
tail-> fixnum 2 [#x0000000000000010]
